//dfs(5) Consider a network having ‘n’ systems. Design a DFS based program in ‘C’ which outputs
//all systems reachable from a given system.

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
void dfs(int u,int n,int a[][10],int s[]);
void read_data(int n,int a[][10]);
int checkon(int n,int a[][10]);
void read_data(int n,int a[][10])
{
	int i,j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
}
void dfs(int u,int n,int a[][10],int s[])
{
	int v;
	s[u]=1;
	for(v=0;v<n;v++)
	{
		if((a[u][v]==1)&&(s[v]==0))
		{
			dfs(v,n,a,s);
		}
	}
}
int checkon(int n,int a[][10])
{
	int i,j,flag,s[10],sol[10][10];
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			s[j]=0;
		}	
		dfs(i,n,a,s);
		for(j=0;j<n;j++)
		sol[i][j]=s[j]; 
	}
	flag=1;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if((sol[i][j]==0) && (sol[j][i]==0))
			{
				flag=0;
			}
		}
	}
	return flag;
}
void main()
{
	int result,n,a[10][10];;
	printf("enter the number of nodes\n");
	scanf("%d",&n);
	printf("enter the adjacency matrix\n");
	read_data(n,a);
	result=checkon(n,a);
	if(result==1)
	printf("the graph is connected\n");
	else
	printf("the graph is not connected\n");
	getch();
}
